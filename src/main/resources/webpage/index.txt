Truss Webapp API
================

http://trussapp.edu/api/
| "display this API guide"
|
|-user/{username}
|   GET: "Return user info
|        => UserInfo
|   POST: "register user"
|         => UserInfo
|
|-user/{userName}/
|   |
|   |-inputset
|   |   GET: "return a list of InputSetIds for this user"
|   |        => [String]
|   |   POST: "create a new InputSet record"
|   |         InputSet => ResultSet
|   |
|   |-inputSet/{inputSetId}
|       GET: "return the latest InputSet with this id"
|            => InputSet
|
|       POST: "post an edited version of this InputSet.
|              Overwrite the previously submitted InputSet.
|              If no previous InputSet with this id exist, do nothing.
|              Will probably add support for versioning later."
|              InputSet => ResultSet
|
|-computation
|   POST: "Anonymous computation"
|         InputSet => ResultSet
|
|-sample
|   GET: "return a list of sample Ids"
|        => [String]
|
|-sample/{inputSetId}
    GET: "return a sample InputSet"
         => InputSet

UserInfo =
    {
        "name": String
    }

InputSetInfo =
    {
        "dateCreated": Int
    }

InputSet =
    {
        "userId":     String
        "inputSetId": String
        "jointSet":   [Joint]
        "memberSet":  [Member]
    }

ResultSet =
    {
        "userId":          String
        "inputSetId":      String
        "timestamp":       String
        "message":         String
        "isSuccessful":    Boolean
        "responseCode":    Int
        "jointResultSet":  [JointResult]
        "memberResultSet": [MemberResult]
    }

Joint =
    {
        "id":           Int
        "x":            Double
        "y":            Double
        "isRestraintX": Boolean
        "isRestraintY": Boolean
        "loadX":        Double
        "loadY":        Double
    }

Member =
    {
        "id":         Int
        "jointLeft":  Int
        "jointRight": Int
        "area":       Double
        "elasticity": Double
    }

JointResult =
    {
        "id":            Int
        "displacementX": Double
        "displacementY": Double
        "reactionX":     Double
        "reactionY":     Double
    }

MemberResult =
    {
        "id":    Int
        "force": Double
    }
